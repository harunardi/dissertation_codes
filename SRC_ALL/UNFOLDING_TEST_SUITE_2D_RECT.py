import numpy as np
import time
import os
import sys
import random
import logging

# Prevent .pyc file generation
os.environ['PYTHONDONTWRITEBYTECODE'] = '1'
sys.dont_write_bytecode = True

start_time = time.time()

from SRC_UNFOLDING_2D_RECT import *

#######################################################################################################
v1 = 18117783.556304164
v2 = 414805.26844859135
Beff = 0.00532631
l = 0.09388315496149423
NUFIS = [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00659381, 0.00680987, 0.00674837, 0.00552899, 0.00678228, 0.00682602, 0.0066049, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00581466, 0.00643709, 0.00883127, 0.0080305, 0.00841215, 0.00800959, 0.00841058, 0.00803797, 0.00885004, 0.00642776, 0.00584927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00580559, 0.00882192, 0.00805581, 0.0065546, 0.00772306, 0.00550945, 0.00775227, 0.0055357, 0.00773404, 0.0065818, 0.00801405, 0.0088017, 0.00580628, 0.0, 0.0, 0.0, 0.0, 0.00641975, 0.00804625, 0.00526123, 0.00769348, 0.0060944, 0.00771802, 0.00552534, 0.0076988, 0.00612615, 0.00771457, 0.00526549, 0.00800656, 0.00642951, 0.0, 0.0, 0.0, 0.00657505, 0.00884982, 0.0064248, 0.00769622, 0.0062968, 0.00769755, 0.00706578, 0.00804706, 0.00705788, 0.00771622, 0.00627063, 0.00771955, 0.00639189, 0.00882166, 0.00659078, 0.0, 0.0, 0.00680279, 0.00808205, 0.0077182, 0.00610196, 0.00769882, 0.00612299, 0.00580456, 0.00612491, 0.00580555, 0.00612583, 0.00771945, 0.00612608, 0.00773591, 0.00803192, 0.00680283, 0.0, 0.0, 0.00677008, 0.00839808, 0.00554004, 0.00769396, 0.00703459, 0.00582372, 0.0064466, 0.00769105, 0.00644681, 0.00581757, 0.0070591, 0.00770605, 0.00552565, 0.00843219, 0.00677344, 0.0, 0.0, 0.00553852, 0.00802879, 0.00773431, 0.00551987, 0.0080447, 0.00611618, 0.00769643, 0.00539168, 0.0076961, 0.00610924, 0.00805831, 0.00553414, 0.00772862, 0.00806704, 0.00554767, 0.0, 0.0, 0.00676238, 0.00843734, 0.00553629, 0.00773019, 0.00707368, 0.00582474, 0.00644408, 0.00767067, 0.00644237, 0.00582811, 0.00705056, 0.00770474, 0.00553293, 0.00840715, 0.00677579, 0.0, 0.0, 0.00680012, 0.00804604, 0.00772395, 0.00610332, 0.00770625, 0.00611378, 0.00582107, 0.00612163, 0.0058205, 0.00612416, 0.00770457, 0.00610831, 0.0077736, 0.00799978, 0.00680415, 0.0, 0.0, 0.00656095, 0.00880757, 0.00641501, 0.00770334, 0.00629238, 0.00772194, 0.00705679, 0.00804574, 0.00704354, 0.00770012, 0.00626389, 0.00770063, 0.00640155, 0.00886843, 0.00661277, 0.0, 0.0, 0.0, 0.00641327, 0.00802072, 0.00525647, 0.00770692, 0.00611519, 0.00770412, 0.00552776, 0.00768367, 0.00613308, 0.00771347, 0.00525159, 0.00801841, 0.00644207, 0.0, 0.0, 0.0, 0.0, 0.00578341, 0.00880654, 0.00804999, 0.00657806, 0.00773495, 0.00552112, 0.0077266, 0.0055479, 0.00771783, 0.00656259, 0.00801247, 0.00883208, 0.00584526, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00582247, 0.00644272, 0.00883719, 0.00804723, 0.00845824, 0.00803537, 0.00839273, 0.00800338, 0.00882977, 0.00644792, 0.00581656, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00657806, 0.00680183, 0.00678063, 0.00554498, 0.00679439, 0.00681507, 0.00660658, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.166462, 0.250089, 0.168803, 0.145843, 0.16869, 0.250044, 0.165388, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.152793, 0.160203, 0.381232, 0.16386, 0.366362, 0.163808, 0.365031, 0.163868, 0.381824, 0.160948, 0.152988, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15332, 0.380374, 0.165107, 0.167374, 0.307948, 0.145135, 0.307398, 0.144714, 0.307605, 0.167623, 0.165599, 0.381722, 0.15212, 0.0, 0.0, 0.0, 0.0, 0.161377, 0.165891, 0.140189, 0.156356, 0.156959, 0.156551, 0.147599, 0.15637, 0.156541, 0.156292, 0.14014, 0.165503, 0.161088, 0.0, 0.0, 0.0, 0.166016, 0.379506, 0.164715, 0.157325, 0.224525, 0.156188, 0.273448, 0.164659, 0.272483, 0.15612, 0.225345, 0.156734, 0.164843, 0.379827, 0.16704, 0.0, 0.0, 0.249617, 0.163427, 0.309264, 0.15659, 0.156243, 0.157325, 0.153618, 0.157064, 0.153887, 0.156966, 0.156296, 0.156803, 0.308843, 0.163528, 0.249237, 0.0, 0.0, 0.168523, 0.366288, 0.144575, 0.156884, 0.272376, 0.153653, 0.161814, 0.156655, 0.161413, 0.153218, 0.272488, 0.15631, 0.145523, 0.366602, 0.169598, 0.0, 0.0, 0.14505, 0.16394, 0.310537, 0.147324, 0.16533, 0.157308, 0.156698, 0.143311, 0.156728, 0.157216, 0.165184, 0.147628, 0.308596, 0.16436, 0.145409, 0.0, 0.0, 0.168791, 0.364204, 0.14517, 0.156283, 0.273103, 0.153518, 0.161715, 0.157088, 0.161609, 0.15385, 0.273553, 0.155921, 0.144937, 0.365938, 0.168603, 0.0, 0.0, 0.249598, 0.163688, 0.308975, 0.156672, 0.155848, 0.157197, 0.153118, 0.156873, 0.153927, 0.15688, 0.157007, 0.156547, 0.309108, 0.163802, 0.250456, 0.0, 0.0, 0.167372, 0.381878, 0.164911, 0.156649, 0.226151, 0.155731, 0.272315, 0.164913, 0.272802, 0.156085, 0.225721, 0.156695, 0.16488, 0.381874, 0.165762, 0.0, 0.0, 0.0, 0.160681, 0.165062, 0.140069, 0.156239, 0.156533, 0.156589, 0.147786, 0.156557, 0.156651, 0.156324, 0.140101, 0.164919, 0.160923, 0.0, 0.0, 0.0, 0.0, 0.153019, 0.380241, 0.165467, 0.167595, 0.308225, 0.145966, 0.308578, 0.144671, 0.308517, 0.167242, 0.16517, 0.379572, 0.152218, 0.0, 0.0, 0.0, 0.0, 0.0, 0.152807, 0.161188, 0.381863, 0.163617, 0.365217, 0.164295, 0.363485, 0.163447, 0.382599, 0.160757, 0.152979, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.167223, 0.250295, 0.169151, 0.1449, 0.168393, 0.252047, 0.166717, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
chi = [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
TOT = [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.565559, 0.560094, 0.564573, 0.568456, 0.563814, 0.559683, 0.565552, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.568144, 0.562539, 0.551341, 0.558903, 0.551756, 0.558928, 0.551587, 0.559161, 0.550959, 0.561733, 0.568244, 0.0, 0.0, 0.0, 0.0, 0.0, 0.568007, 0.55063, 0.561325, 0.561399, 0.555128, 0.565946, 0.555583, 0.566266, 0.555644, 0.561359, 0.560538, 0.551048, 0.568777, 0.0, 0.0, 0.0, 0.0, 0.561974, 0.560889, 0.566181, 0.562016, 0.564552, 0.561546, 0.565987, 0.561706, 0.564789, 0.561786, 0.566269, 0.56061, 0.561437, 0.0, 0.0, 0.0, 0.566172, 0.551429, 0.561555, 0.561801, 0.560978, 0.562266, 0.557255, 0.561457, 0.556904, 0.561753, 0.560773, 0.561987, 0.561715, 0.551305, 0.566138, 0.0, 0.0, 0.560105, 0.559082, 0.555391, 0.564973, 0.5618, 0.562016, 0.566917, 0.562143, 0.567476, 0.561998, 0.561876, 0.565083, 0.556078, 0.559416, 0.560382, 0.0, 0.0, 0.563984, 0.551472, 0.565879, 0.561833, 0.55713, 0.567261, 0.563005, 0.561407, 0.563448, 0.567263, 0.557398, 0.561991, 0.565495, 0.551216, 0.564179, 0.0, 0.0, 0.568902, 0.558816, 0.555665, 0.565681, 0.561502, 0.562205, 0.561324, 0.565539, 0.561527, 0.562369, 0.561272, 0.565689, 0.555734, 0.558873, 0.568198, 0.0, 0.0, 0.563511, 0.551692, 0.565589, 0.562011, 0.557274, 0.567063, 0.563578, 0.561396, 0.56359, 0.567283, 0.557148, 0.561903, 0.565871, 0.551067, 0.563756, 0.0, 0.0, 0.559704, 0.559241, 0.555848, 0.564851, 0.562682, 0.562672, 0.566643, 0.56231, 0.566989, 0.562102, 0.562289, 0.564796, 0.55571, 0.558863, 0.560343, 0.0, 0.0, 0.565989, 0.551153, 0.561932, 0.562488, 0.560226, 0.562292, 0.557217, 0.561171, 0.5576, 0.561727, 0.561133, 0.561872, 0.562078, 0.55122, 0.565387, 0.0, 0.0, 0.0, 0.562237, 0.561075, 0.566509, 0.562133, 0.565116, 0.561652, 0.566428, 0.562277, 0.564494, 0.562204, 0.566345, 0.560824, 0.562069, 0.0, 0.0, 0.0, 0.0, 0.568299, 0.550609, 0.561158, 0.561066, 0.555348, 0.566036, 0.555691, 0.565781, 0.555062, 0.561451, 0.561159, 0.5512, 0.569184, 0.0, 0.0, 0.0, 0.0, 0.0, 0.569764, 0.561695, 0.550968, 0.558996, 0.551202, 0.558555, 0.551976, 0.558889, 0.550899, 0.561649, 0.569305, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.565939, 0.560594, 0.56429, 0.567924, 0.564138, 0.56015, 0.567093, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.45564, 1.47482, 1.45784, 1.45272, 1.45502, 1.47045, 1.45326, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.45545, 1.4366, 1.55346, 1.42313, 1.54643, 1.42551, 1.54669, 1.42678, 1.55578, 1.43353, 1.45316, 0.0, 0.0, 0.0, 0.0, 0.0, 1.45396, 1.55453, 1.44472, 1.43942, 1.50805, 1.43386, 1.50691, 1.43615, 1.51044, 1.44015, 1.44531, 1.55592, 1.45647, 0.0, 0.0, 0.0, 0.0, 1.43704, 1.44446, 1.43642, 1.44118, 1.45469, 1.4416, 1.43929, 1.44097, 1.45369, 1.44141, 1.43606, 1.44454, 1.43415, 0.0, 0.0, 0.0, 1.4556, 1.55375, 1.43877, 1.44171, 1.46139, 1.44312, 1.4893, 1.44425, 1.48666, 1.44057, 1.46175, 1.44058, 1.43903, 1.55333, 1.45403, 0.0, 0.0, 1.47135, 1.42644, 1.51135, 1.45481, 1.44021, 1.43776, 1.45657, 1.43731, 1.45798, 1.43705, 1.44116, 1.45219, 1.50976, 1.42618, 1.47439, 0.0, 0.0, 1.45153, 1.54401, 1.43658, 1.44177, 1.48713, 1.45748, 1.45385, 1.44222, 1.45324, 1.45643, 1.48586, 1.44231, 1.43704, 1.54343, 1.4569, 0.0, 0.0, 1.45092, 1.4244, 1.51088, 1.43958, 1.44454, 1.4375, 1.44123, 1.43599, 1.44073, 1.43937, 1.44403, 1.43991, 1.51005, 1.42483, 1.45228, 0.0, 0.0, 1.45358, 1.54418, 1.43646, 1.44143, 1.48692, 1.45709, 1.45467, 1.44201, 1.45415, 1.45689, 1.48622, 1.44064, 1.4365, 1.54456, 1.45413, 0.0, 0.0, 1.47148, 1.42754, 1.50793, 1.45388, 1.44164, 1.43691, 1.45572, 1.43727, 1.45593, 1.43763, 1.43997, 1.45411, 1.51146, 1.42493, 1.47288, 0.0, 0.0, 1.45298, 1.55158, 1.44005, 1.44211, 1.46042, 1.44135, 1.48736, 1.44441, 1.48615, 1.44029, 1.46318, 1.44138, 1.43766, 1.55419, 1.45687, 0.0, 0.0, 0.0, 1.43682, 1.44602, 1.43705, 1.44088, 1.45324, 1.44152, 1.43901, 1.44276, 1.45367, 1.44025, 1.43762, 1.44335, 1.43269, 0.0, 0.0, 0.0, 0.0, 1.4568, 1.55818, 1.44391, 1.43953, 1.50583, 1.43653, 1.51198, 1.43723, 1.50889, 1.44083, 1.44391, 1.55061, 1.45921, 0.0, 0.0, 0.0, 0.0, 0.0, 1.45419, 1.43585, 1.55183, 1.42492, 1.54335, 1.4238, 1.54218, 1.42571, 1.55646, 1.43663, 1.45433, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.45064, 1.47606, 1.45398, 1.4557, 1.45467, 1.47181, 1.4518, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
ABS = [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0109363, 0.0129571, 0.0107383, 0.0111883, 0.0108217, 0.0129558, 0.0108793, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0113491, 0.0106284, 0.0120381, 0.0102551, 0.0118167, 0.0102137, 0.0118394, 0.0102665, 0.012059, 0.010615, 0.011408, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0112778, 0.0120329, 0.0102332, 0.0107967, 0.0125258, 0.0111668, 0.0125758, 0.0111633, 0.0125668, 0.010826, 0.0101993, 0.0120526, 0.011324, 0.0, 0.0, 0.0, 0.0, 0.0105857, 0.0102536, 0.0112816, 0.0100855, 0.0107899, 0.0100793, 0.0114127, 0.0100964, 0.010816, 0.0100932, 0.0112909, 0.0102066, 0.0106388, 0.0, 0.0, 0.0, 0.0109118, 0.0120472, 0.0109016, 0.0101073, 0.0128813, 0.010089, 0.0124703, 0.010246, 0.0124828, 0.0101116, 0.012812, 0.0100793, 0.0108964, 0.0120136, 0.0108603, 0.0, 0.0, 0.01303, 0.0102997, 0.0125197, 0.0107978, 0.0101062, 0.0108033, 0.0112354, 0.0108284, 0.0112558, 0.0108217, 0.0100992, 0.0108585, 0.0125418, 0.0102398, 0.0129362, 0.0, 0.0, 0.0107893, 0.0118187, 0.0111814, 0.0100898, 0.0124264, 0.0112577, 0.0106119, 0.0100726, 0.0106183, 0.0112145, 0.012461, 0.0100785, 0.0111424, 0.0118063, 0.0107655, 0.0, 0.0, 0.0112011, 0.0102453, 0.0125622, 0.0113955, 0.0102502, 0.0108007, 0.0100527, 0.0112379, 0.0100655, 0.0108221, 0.0102492, 0.011378, 0.0125839, 0.0102853, 0.0112645, 0.0, 0.0, 0.0107784, 0.0118244, 0.0111848, 0.0101462, 0.0124965, 0.0112282, 0.0106103, 0.0100855, 0.0106338, 0.0112397, 0.0124701, 0.0101136, 0.0111826, 0.0118343, 0.0107934, 0.0, 0.0, 0.0130008, 0.0102547, 0.0125491, 0.0107917, 0.0101201, 0.0108211, 0.0112714, 0.0108172, 0.0112433, 0.0108442, 0.0100721, 0.0108039, 0.0125728, 0.0102315, 0.012985, 0.0, 0.0, 0.010941, 0.0120103, 0.0108978, 0.0100813, 0.0128238, 0.0101157, 0.0124586, 0.0102444, 0.0124739, 0.0100888, 0.0128141, 0.0100777, 0.0108978, 0.0121076, 0.0109122, 0.0, 0.0, 0.0, 0.0106164, 0.0102075, 0.0112816, 0.0101019, 0.0107968, 0.0100793, 0.0114191, 0.0100646, 0.0107851, 0.0101139, 0.0113019, 0.0102189, 0.0106722, 0.0, 0.0, 0.0, 0.0, 0.0113497, 0.0119939, 0.0102429, 0.0108376, 0.0125129, 0.0111607, 0.0125413, 0.0111789, 0.0125015, 0.0108098, 0.010215, 0.0120311, 0.0113474, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0113748, 0.0106432, 0.0120346, 0.0102678, 0.0118314, 0.0102597, 0.0118218, 0.0102322, 0.0120366, 0.0106485, 0.0113573, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0109851, 0.0130372, 0.0108155, 0.0111084, 0.0107902, 0.0130028, 0.0110313, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.119982, 0.180333, 0.120618, 0.113091, 0.120599, 0.18026, 0.119221, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.116327, 0.116031, 0.258179, 0.121593, 0.250302, 0.121466, 0.249368, 0.121799, 0.258473, 0.116383, 0.116438, 0.0, 0.0, 0.0, 0.0, 0.0, 0.116616, 0.257503, 0.122304, 0.120269, 0.21462, 0.112349, 0.214226, 0.112088, 0.21451, 0.120428, 0.122802, 0.25838, 0.11592, 0.0, 0.0, 0.0, 0.0, 0.116701, 0.122656, 0.111283, 0.118304, 0.11603, 0.118378, 0.114914, 0.118342, 0.11576, 0.11823, 0.111284, 0.122553, 0.116514, 0.0, 0.0, 0.0, 0.119688, 0.256783, 0.11952, 0.118808, 0.166022, 0.118274, 0.193505, 0.122348, 0.192902, 0.118118, 0.166575, 0.118477, 0.119575, 0.257275, 0.120344, 0.0, 0.0, 0.179982, 0.121422, 0.215563, 0.1158, 0.11821, 0.11599, 0.116905, 0.115838, 0.117097, 0.115788, 0.118218, 0.115879, 0.215257, 0.121556, 0.179982, 0.0, 0.0, 0.120416, 0.250175, 0.112015, 0.11851, 0.192725, 0.116963, 0.117261, 0.118324, 0.117038, 0.116679, 0.192827, 0.118082, 0.112624, 0.250484, 0.121073, 0.0, 0.0, 0.112598, 0.121515, 0.21612, 0.114751, 0.122606, 0.115998, 0.118234, 0.112258, 0.118394, 0.115947, 0.122416, 0.114934, 0.214967, 0.121728, 0.112781, 0.0, 0.0, 0.12062, 0.249387, 0.112417, 0.118228, 0.193148, 0.116869, 0.117212, 0.118654, 0.117152, 0.117077, 0.193524, 0.117904, 0.11226, 0.249756, 0.120455, 0.0, 0.0, 0.179999, 0.121433, 0.215177, 0.11584, 0.118088, 0.115912, 0.116596, 0.115723, 0.117095, 0.115737, 0.11862, 0.115767, 0.215218, 0.121532, 0.180577, 0.0, 0.0, 0.120424, 0.258254, 0.119665, 0.118386, 0.167049, 0.118019, 0.192778, 0.12243, 0.193021, 0.118126, 0.166841, 0.118561, 0.11961, 0.25835, 0.119539, 0.0, 0.0, 0.0, 0.116378, 0.122557, 0.111255, 0.118284, 0.115748, 0.118448, 0.115021, 0.118433, 0.11581, 0.118235, 0.111256, 0.122076, 0.116406, 0.0, 0.0, 0.0, 0.0, 0.116503, 0.257451, 0.122522, 0.120389, 0.214776, 0.11289, 0.214889, 0.112127, 0.214825, 0.120193, 0.122193, 0.257216, 0.116054, 0.0, 0.0, 0.0, 0.0, 0.0, 0.116366, 0.116586, 0.258627, 0.121466, 0.249993, 0.121935, 0.248639, 0.121406, 0.258758, 0.116353, 0.11642, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.120307, 0.180603, 0.120817, 0.112565, 0.120421, 0.181574, 0.120061, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
D1 = [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 1.50924, 1.47998, 1.50892, 1.49778, 1.51114, 1.48377, 1.50328, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1.49614, 1.50043, 1.5052, 1.50939, 1.50344, 1.50961, 1.50521, 1.50922, 1.50621, 1.50326, 1.50317, 0.0, 0.0, 0.0], [0.0, 0.0, 1.50209, 1.51228, 1.51183, 1.50231, 1.4966, 1.49497, 1.49514, 1.49423, 1.496, 1.50368, 1.51671, 1.50649, 1.49665, 0.0, 0.0], [0.0, 0.0, 1.5053, 1.51279, 1.48935, 1.5091, 1.50951, 1.51195, 1.49306, 1.51286, 1.50638, 1.5102, 1.49157, 1.51448, 1.50521, 0.0, 0.0], [0.0, 1.49977, 1.50192, 1.49988, 1.51159, 1.48107, 1.5095, 1.48996, 1.51151, 1.49001, 1.51213, 1.48224, 1.5094, 1.50314, 1.50559, 1.50522, 0.0], [0.0, 1.4816, 1.50445, 1.49549, 1.50622, 1.51131, 1.50206, 1.50204, 1.50251, 1.50222, 1.50401, 1.51337, 1.50713, 1.49109, 1.50769, 1.48266, 0.0], [0.0, 1.50777, 1.50544, 1.49438, 1.51217, 1.48855, 1.50453, 1.51049, 1.51046, 1.51041, 1.50136, 1.49024, 1.5102, 1.49702, 1.5063, 1.51102, 0.0], [0.0, 1.4918, 1.5074, 1.49492, 1.4933, 1.51088, 1.50073, 1.51194, 1.49297, 1.51045, 1.50078, 1.51261, 1.49418, 1.49721, 1.508, 1.49883, 0.0], [0.0, 1.5146, 1.50478, 1.49535, 1.51004, 1.49029, 1.50217, 1.51105, 1.51368, 1.50876, 1.50195, 1.49059, 1.51064, 1.49621, 1.50383, 1.51027, 0.0], [0.0, 1.48258, 1.50454, 1.49366, 1.50678, 1.50848, 1.49973, 1.50105, 1.50348, 1.5032, 1.50258, 1.51101, 1.51088, 1.49213, 1.50721, 1.48619, 0.0], [0.0, 1.50325, 1.50328, 1.5042, 1.50822, 1.48119, 1.51013, 1.49006, 1.51284, 1.49049, 1.5112, 1.4765, 1.51365, 1.50209, 1.5078, 1.5033, 0.0], [0.0, 0.0, 1.50131, 1.51408, 1.49097, 1.51012, 1.50617, 1.51149, 1.49085, 1.50965, 1.50738, 1.51069, 1.49313, 1.51274, 1.50275, 0.0, 0.0], [0.0, 0.0, 1.5018, 1.5077, 1.50995, 1.50507, 1.49877, 1.49559, 1.49511, 1.49729, 1.49612, 1.50348, 1.51321, 1.50644, 1.49347, 0.0, 0.0], [0.0, 0.0, 0.0, 1.49288, 1.50404, 1.50545, 1.50678, 1.5053, 1.50881, 1.50349, 1.50926, 1.50763, 1.50293, 1.49705, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 1.50453, 1.48411, 1.50584, 1.49987, 1.51242, 1.47936, 1.50015, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
SIGS11 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.536943, 0.531674, 0.536037, 0.539421, 0.535212, 0.531351, 0.536808, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.539046, 0.534178, 0.523784, 0.530786, 0.524275, 0.530875, 0.524101, 0.531041, 0.523457, 0.533424, 0.539108, 0.0, 0.0, 0.0, 0.0, 0.0, 0.538883, 0.523116, 0.532964, 0.53318, 0.527278, 0.537256, 0.527661, 0.537507, 0.527741, 0.533119, 0.532281, 0.523478, 0.539568, 0.0, 0.0, 0.0, 0.0, 0.533698, 0.532648, 0.537306, 0.533632, 0.535988, 0.533187, 0.537143, 0.533348, 0.536225, 0.533448, 0.537376, 0.532365, 0.533167, 0.0, 0.0, 0.0, 0.537394, 0.523942, 0.533291, 0.533388, 0.532507, 0.533839, 0.529287, 0.533112, 0.528922, 0.533404, 0.532345, 0.533641, 0.533388, 0.523869, 0.537386, 0.0, 0.0, 0.531742, 0.531032, 0.527555, 0.536321, 0.533466, 0.533726, 0.538043, 0.533785, 0.5386, 0.533701, 0.533521, 0.536489, 0.528179, 0.531284, 0.532005, 0.0, 0.0, 0.535417, 0.523915, 0.537214, 0.53347, 0.529193, 0.538271, 0.534554, 0.533093, 0.534979, 0.538389, 0.529381, 0.533604, 0.536777, 0.523785, 0.53562, 0.0, 0.0, 0.539828, 0.530762, 0.527754, 0.536892, 0.533214, 0.533882, 0.532989, 0.536799, 0.533156, 0.534029, 0.53293, 0.536841, 0.527793, 0.53077, 0.539159, 0.0, 0.0, 0.535012, 0.524171, 0.53686, 0.533614, 0.5293, 0.538157, 0.535148, 0.533018, 0.535175, 0.538387, 0.529146, 0.533529, 0.537226, 0.523567, 0.535237, 0.0, 0.0, 0.531361, 0.531195, 0.527931, 0.536234, 0.53426, 0.534327, 0.537745, 0.533994, 0.538126, 0.533739, 0.533953, 0.5362, 0.527854, 0.530807, 0.531994, 0.0, 0.0, 0.537276, 0.523674, 0.533641, 0.534136, 0.531831, 0.533934, 0.529241, 0.532886, 0.52958, 0.533334, 0.532732, 0.533539, 0.533794, 0.523691, 0.536533, 0.0, 0.0, 0.0, 0.533981, 0.532659, 0.537708, 0.533721, 0.536498, 0.533348, 0.537622, 0.533922, 0.535872, 0.533829, 0.537522, 0.532541, 0.533741, 0.0, 0.0, 0.0, 0.0, 0.53917, 0.52314, 0.532776, 0.532825, 0.527434, 0.537414, 0.527786, 0.53702, 0.527213, 0.533225, 0.532823, 0.523772, 0.539914, 0.0, 0.0, 0.0, 0.0, 0.0, 0.540456, 0.533423, 0.523451, 0.530971, 0.52365, 0.530559, 0.524446, 0.530856, 0.523447, 0.533331, 0.540071, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.537135, 0.532183, 0.535752, 0.538897, 0.535551, 0.531789, 0.53816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
SIGS12 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0176658, 0.0153854, 0.0177392, 0.0178313, 0.017693, 0.0153322, 0.0177997, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0176702, 0.0176399, 0.0154479, 0.0177754, 0.0156321, 0.017809, 0.0155114, 0.0177603, 0.0153911, 0.0175894, 0.0176931, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0177615, 0.0154195, 0.0180851, 0.0173501, 0.015284, 0.0174601, 0.0153083, 0.0175259, 0.0153021, 0.0173515, 0.0180432, 0.0154113, 0.0178492, 0.0, 0.0, 0.0, 0.0, 0.0176044, 0.0180015, 0.0174751, 0.0182174, 0.017721, 0.0182114, 0.01739, 0.0181849, 0.0177321, 0.0182008, 0.0174925, 0.018012, 0.0175777, 0.0, 0.0, 0.0, 0.0177838, 0.0154196, 0.0172731, 0.0182096, 0.015556, 0.0182492, 0.0154477, 0.0180341, 0.0154414, 0.0182146, 0.0155415, 0.0182524, 0.0173791, 0.0153926, 0.01788, 0.0, 0.0, 0.0152808, 0.0176841, 0.0152817, 0.0177895, 0.0181915, 0.0174634, 0.0175749, 0.0174963, 0.0175648, 0.0174435, 0.0182403, 0.0177089, 0.0153336, 0.0177843, 0.0154144, 0.0, 0.0, 0.017766, 0.0156556, 0.017447, 0.0182401, 0.0154489, 0.0176264, 0.017813, 0.0181826, 0.017772, 0.0176535, 0.0154945, 0.0182583, 0.0175227, 0.0155297, 0.017722, 0.0, 0.0, 0.0177989, 0.0177537, 0.0153011, 0.0173278, 0.0180484, 0.0175062, 0.018245, 0.0174825, 0.0182731, 0.0174631, 0.0180414, 0.0174074, 0.0152935, 0.017765, 0.0177553, 0.0, 0.0, 0.0176667, 0.0156274, 0.0174842, 0.0182226, 0.0154487, 0.0176226, 0.0177827, 0.0182512, 0.0177849, 0.0176162, 0.0154741, 0.0182303, 0.0174194, 0.0156243, 0.0177287, 0.0, 0.0, 0.0153303, 0.0178175, 0.0153031, 0.0177718, 0.0182418, 0.0175017, 0.0175888, 0.0174992, 0.0175872, 0.0174875, 0.0182314, 0.017744, 0.0152588, 0.0177738, 0.015393, 0.0, 0.0, 0.0178615, 0.015407, 0.0173429, 0.0182429, 0.015526, 0.0182047, 0.0154591, 0.018004, 0.0155318, 0.018224, 0.0155212, 0.0182174, 0.017344, 0.0154137, 0.0179203, 0.0, 0.0, 0.0, 0.0176065, 0.0181358, 0.0175095, 0.0182684, 0.017742, 0.0181894, 0.0173522, 0.018289, 0.0177872, 0.018203, 0.0174666, 0.0180575, 0.0175991, 0.0, 0.0, 0.0, 0.0, 0.0177427, 0.0154055, 0.0180309, 0.0173481, 0.0153192, 0.0174699, 0.0152921, 0.0175086, 0.0153169, 0.0173625, 0.0181004, 0.0153929, 0.0178352, 0.0, 0.0, 0.0, 0.0, 0.0, 0.017901, 0.017524, 0.0154534, 0.0177617, 0.0156206, 0.0177311, 0.0156303, 0.0177663, 0.0153753, 0.0175583, 0.0178087, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0177624, 0.0154189, 0.0176799, 0.0178763, 0.0177741, 0.0153311, 0.0178101, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
D2 = [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.345931, 0.333125, 0.345909, 0.344736, 0.346475, 0.334798, 0.345697, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.34507, 0.349324, 0.315075, 0.359208, 0.316585, 0.358713, 0.316461, 0.357996, 0.315343, 0.350033, 0.345301, 0.0, 0.0, 0.0], [0.0, 0.0, 0.345083, 0.315681, 0.353739, 0.348595, 0.325092, 0.348202, 0.325893, 0.348034, 0.324937, 0.348133, 0.353491, 0.314915, 0.344233, 0.0, 0.0], [0.0, 0.0, 0.349141, 0.353901, 0.3465, 0.354138, 0.345101, 0.353894, 0.346761, 0.354033, 0.344639, 0.354154, 0.346631, 0.35391, 0.350152, 0.0, 0.0], [0.0, 0.346969, 0.315697, 0.348345, 0.354099, 0.335905, 0.354086, 0.329857, 0.353945, 0.330161, 0.354917, 0.335741, 0.354743, 0.348107, 0.315183, 0.346166, 0.0], [0.0, 0.33398, 0.358207, 0.324617, 0.344859, 0.354562, 0.347983, 0.343818, 0.347717, 0.342911, 0.347962, 0.354295, 0.345548, 0.32454, 0.358183, 0.33402, 0.0], [0.0, 0.347543, 0.316509, 0.347449, 0.354181, 0.330109, 0.34314, 0.345954, 0.35377, 0.345891, 0.343413, 0.33031, 0.353824, 0.347734, 0.317277, 0.345601, 0.0], [0.0, 0.34425, 0.358755, 0.324401, 0.345893, 0.353927, 0.347865, 0.354592, 0.346791, 0.35423, 0.347737, 0.354081, 0.346451, 0.324542, 0.357976, 0.343915, 0.0], [0.0, 0.346743, 0.317408, 0.347088, 0.35431, 0.330189, 0.343023, 0.34528, 0.353769, 0.345078, 0.343274, 0.330288, 0.354592, 0.347571, 0.316756, 0.347099, 0.0], [0.0, 0.334664, 0.357894, 0.325272, 0.344803, 0.354527, 0.347865, 0.343654, 0.347881, 0.3434, 0.347885, 0.354663, 0.344919, 0.324651, 0.358611, 0.334225, 0.0], [0.0, 0.347627, 0.315787, 0.348237, 0.353924, 0.335865, 0.354533, 0.329957, 0.354177, 0.330535, 0.354407, 0.335241, 0.353787, 0.348309, 0.315199, 0.346111, 0.0], [0.0, 0.0, 0.349229, 0.353451, 0.346464, 0.354237, 0.344972, 0.354107, 0.34614, 0.35421, 0.34448, 0.354138, 0.345665, 0.354149, 0.350634, 0.0, 0.0], [0.0, 0.0, 0.344774, 0.31429, 0.354288, 0.348505, 0.325806, 0.347361, 0.324198, 0.347314, 0.325462, 0.348026, 0.35387, 0.315574, 0.343879, 0.0, 0.0], [0.0, 0.0, 0.0, 0.344516, 0.349527, 0.315285, 0.358804, 0.317823, 0.358232, 0.317247, 0.358558, 0.31469, 0.34967, 0.344622, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.347522, 0.333107, 0.346503, 0.343167, 0.346369, 0.333822, 0.346592, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
SIGS21 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00180945, 0.00248439, 0.00181811, 0.00161346, 0.00178749, 0.00256295, 0.00188038, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00171421, 0.00182412, 0.00330851, 0.00193462, 0.00336977, 0.00187949, 0.00318378, 0.00184704, 0.00323196, 0.00182739, 0.00183879, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0018122, 0.00327215, 0.00177334, 0.00184918, 0.00282652, 0.00178185, 0.00274449, 0.00177865, 0.00289405, 0.00180458, 0.00185983, 0.00335405, 0.00187696, 0.0, 0.0, 0.0, 0.0, 0.00172924, 0.00181957, 0.00166621, 0.00173529, 0.00177318, 0.00179233, 0.00169741, 0.00176869, 0.00174235, 0.00170942, 0.00162641, 0.00183855, 0.00169753, 0.0, 0.0, 0.0, 0.001846, 0.00343634, 0.00183615, 0.00176244, 0.00219269, 0.00181277, 0.0026235, 0.00183524, 0.0024982, 0.00184024, 0.00227459, 0.00184054, 0.00181877, 0.00341122, 0.0017597, 0.0, 0.0, 0.00230945, 0.00194398, 0.00280923, 0.00171169, 0.00180939, 0.00175784, 0.00174002, 0.00169876, 0.00177906, 0.00174704, 0.00177322, 0.00175919, 0.00279126, 0.0019153, 0.00244904, 0.0, 0.0, 0.00181057, 0.00321399, 0.00173034, 0.00173803, 0.00270974, 0.00172292, 0.00174392, 0.00173322, 0.0017244, 0.0017451, 0.00253319, 0.0017746, 0.00177059, 0.00338433, 0.00183689, 0.0, 0.0, 0.00169118, 0.001938, 0.00286613, 0.001656, 0.00184118, 0.00176044, 0.00180693, 0.0016843, 0.00183561, 0.00176137, 0.00185193, 0.0017568, 0.0028973, 0.0018644, 0.00161771, 0.0, 0.0, 0.00187269, 0.0033314, 0.0018418, 0.00175126, 0.00263009, 0.00179311, 0.00171566, 0.00176683, 0.00176788, 0.00176807, 0.00260216, 0.00180435, 0.00174824, 0.00328675, 0.00176652, 0.0, 0.0, 0.00253275, 0.00190634, 0.00277489, 0.00179032, 0.00176835, 0.00175694, 0.00172663, 0.00178059, 0.00169624, 0.00171227, 0.00185793, 0.00178155, 0.00277314, 0.00188844, 0.00244303, 0.0, 0.0, 0.00193155, 0.00330735, 0.00184172, 0.00172476, 0.00233286, 0.00173598, 0.00255441, 0.00185291, 0.00257568, 0.00178366, 0.00219801, 0.00176209, 0.00177414, 0.00345971, 0.00185714, 0.0, 0.0, 0.0, 0.00181231, 0.00189289, 0.0016206, 0.00174996, 0.00166833, 0.00173582, 0.00171003, 0.00173041, 0.00175586, 0.00178232, 0.00166306, 0.00186688, 0.00175908, 0.0, 0.0, 0.0, 0.0, 0.00176111, 0.00328131, 0.0018187, 0.00180756, 0.00280392, 0.00174571, 0.00272112, 0.00172333, 0.00296303, 0.00183333, 0.001739, 0.00325593, 0.00179918, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00183194, 0.00186104, 0.00328397, 0.00190759, 0.00325973, 0.00189644, 0.00314857, 0.00192317, 0.00327784, 0.00181681, 0.00170186, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00191093, 0.00245169, 0.00189162, 0.00177219, 0.00186603, 0.00250463, 0.00188413, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
SIGS22 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.33347, 1.29245, 1.33522, 1.3383, 1.33308, 1.28655, 1.33183, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.33714, 1.31855, 1.2921, 1.29932, 1.29256, 1.302, 1.29457, 1.30323, 1.29416, 1.31507, 1.33524, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3356, 1.29322, 1.32066, 1.31704, 1.29083, 1.3198, 1.29, 1.32205, 1.29306, 1.31811, 1.32085, 1.29449, 1.33814, 0.0, 0.0, 0.0, 0.0, 1.31824, 1.32031, 1.32326, 1.32098, 1.33688, 1.32144, 1.32261, 1.32072, 1.33616, 1.32136, 1.32324, 1.32023, 1.3159, 0.0, 0.0, 0.0, 1.33411, 1.29371, 1.31747, 1.32118, 1.29274, 1.32309, 1.29305, 1.32007, 1.29146, 1.32055, 1.2927, 1.32005, 1.31764, 1.29274, 1.3325, 0.0, 0.0, 1.28955, 1.30275, 1.29298, 1.33772, 1.32016, 1.32012, 1.33756, 1.31969, 1.3392, 1.31957, 1.32123, 1.33468, 1.29168, 1.30245, 1.29258, 0.0, 0.0, 1.32883, 1.29019, 1.32291, 1.32147, 1.2916, 1.33875, 1.33465, 1.32221, 1.33429, 1.3379, 1.29064, 1.32219, 1.32269, 1.28934, 1.33363, 0.0, 0.0, 1.33643, 1.30087, 1.2919, 1.32311, 1.32032, 1.31956, 1.32117, 1.32195, 1.32024, 1.32128, 1.31958, 1.3232, 1.29256, 1.3011, 1.33785, 0.0, 0.0, 1.33088, 1.29055, 1.3225, 1.3214, 1.29045, 1.33843, 1.33594, 1.32175, 1.33507, 1.33801, 1.29031, 1.3208, 1.32225, 1.29133, 1.33209, 0.0, 0.0, 1.28947, 1.3041, 1.28951, 1.3362, 1.32188, 1.31895, 1.33727, 1.3199, 1.33733, 1.32028, 1.31953, 1.33666, 1.29371, 1.30134, 1.28929, 0.0, 0.0, 1.33042, 1.28991, 1.31849, 1.32202, 1.29151, 1.3217, 1.29189, 1.31999, 1.29009, 1.32033, 1.29443, 1.32118, 1.31613, 1.29254, 1.33508, 0.0, 0.0, 0.0, 1.31879, 1.32182, 1.32423, 1.32097, 1.33567, 1.32148, 1.32251, 1.32273, 1.33651, 1.32018, 1.32489, 1.3192, 1.31438, 0.0, 0.0, 0.0, 0.0, 1.33864, 1.29777, 1.31976, 1.31724, 1.28851, 1.32208, 1.29439, 1.32311, 1.29099, 1.31875, 1.32001, 1.29022, 1.34146, 0.0, 0.0, 0.0, 0.0, 0.0, 1.33621, 1.31693, 1.28987, 1.30172, 1.28964, 1.29971, 1.29062, 1.30228, 1.29495, 1.31846, 1.33651, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.32815, 1.29223, 1.33113, 1.34161, 1.33214, 1.2884, 1.32991, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

## INITIALIZATION
case_name_base = "TASK3_TEST02n_2DMG_PWRMOX1_AVS_TEST_SUITE"
case_name2 = "TASK3_TEST02n_2DMG_PWRMOX1_AVS"
geom_type = '2D rectangular'
precond = 0
I_max = len(D1[0]) # N row
J_max = len(D1) # N column
dy = 21.42 /1
dx = 21.42 /1
x = np.arange(0, I_max*dx, dx)
y = np.arange(0, J_max*dy, dy)
group = 2
f = 1.000000e+00 
omega = 2 * np.pi * f

# BC
BC = [3, 3, 3, 3] # N, S, E, W

# CROSS SECTION DEFINITIONS
dTOT1 = [[0] * I_max for _ in range(J_max)]
dTOT2 = [[0] * I_max for _ in range(J_max)]
dNUFIS1 = [[0] * I_max for _ in range(J_max)]
dNUFIS2 = [[0] * I_max for _ in range(J_max)]
dSIGS12 = [[0] * I_max for _ in range(J_max)]
dSIGS21 = [[0] * I_max for _ in range(J_max)]
dSIGS11 = [[0] * I_max for _ in range(J_max)]
dSIGS22 = [[0] * I_max for _ in range(J_max)]
expand = 1

dTOT = [dTOT1, dTOT2]
dNUFIS = [dNUFIS1, dNUFIS2]
v1 = [[v1] * I_max for _ in range(J_max)]
v2 = [[v2] * I_max for _ in range(J_max)]
v = [v1, v2]

# Reshaping
D = [D1, D2]
N = I_max*J_max
dTOT_reshaped = [[None] * N for _ in range(group)]
dNUFIS_reshaped = [[None] * N for _ in range(group)]
v_reshaped = [[None] * N for _ in range(group)]
dSIGS12_reshaped = [0.0 for _ in range(N)]
dSIGS21_reshaped = [0.0 for _ in range(N)]
dSIGS11_reshaped = [0.0 for _ in range(N)]
dSIGS22_reshaped = [0.0 for _ in range(N)]
for g in range(group):
    for j in range(J_max):  
        for i in range(I_max):
            m = j * I_max + i
            dTOT_reshaped[g][m] = dTOT[g][j][i]
            dNUFIS_reshaped[g][m] = dNUFIS[g][j][i]
            v_reshaped[g][m] = v[g][j][i]
            dSIGS11_reshaped[m] = dSIGS11[j][i]
            dSIGS12_reshaped[m] = dSIGS12[j][i]
            dSIGS21_reshaped[m] = dSIGS21[j][i]
            dSIGS22_reshaped[m] = dSIGS22[j][i]

SIGS_reshaped = [[SIGS11, SIGS21], [SIGS12, SIGS22]]
dSIGS_reshaped = [[dSIGS11_reshaped, dSIGS21_reshaped], [dSIGS12_reshaped, dSIGS22_reshaped]]

v = v_reshaped
dTOT_OLD = dTOT_reshaped
dNUFIS = dNUFIS_reshaped

map_detector = [
 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 
 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 
 9, 9, 9, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 9, 9, 9, 
 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 
 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 
 9, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 9, 
 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 
 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 
 9, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 9, 
 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 
 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 
 9, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 9, 
 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 
 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 
 9, 9, 9, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 9, 9, 9, 
 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 
 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 
]

map_zone = [
99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
99, 99, 99, 99, 99,  1,  1,  1,  2,  2,  2,  2, 99, 99, 99, 99, 99, 
99, 99, 99,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2, 99, 99, 99, 
99, 99,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  4, 99, 99, 
99, 99,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  4, 99, 99, 
99,  1,  1,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4, 99, 
99,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4, 99, 
99,  3,  3,  3,  3,  3,  3,  3,  5,  6,  6,  6,  4,  4,  4,  4, 99, 
99,  3,  3,  3,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  6, 99, 
99,  5,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  6, 99, 
99,  7,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,  6,  8,  8,  8, 99, 
99,  7,  7,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8,  8,  8, 99, 
99, 99,  7,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8,  8, 99, 99, 
99, 99,  7,  7,  7,  7,  7,  9,  9,  9,  8,  8,  8,  8,  8, 99, 99, 
99, 99, 99,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9, 99, 99, 99, 
99, 99, 99, 99, 99,  9,  9,  9,  9,  9,  9,  9, 99, 99, 99, 99, 99, 
99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
]

# Original map_zone reshaped into 2D
map_zone_reshape = np.reshape(map_zone, (17, 17))
map_detector_reshape = np.reshape(map_detector, (17, 17))
multiplicator = np.ones((1, 1))
map_zone_full_temp = np.kron(map_zone_reshape, multiplicator)
map_detector_full_temp = np.kron(map_detector_reshape, multiplicator)
map_zone = np.array(map_zone_full_temp).flatten().astype(int).tolist()
map_detector = np.array(map_detector_full_temp).flatten().astype(int).tolist()
SIGMA_DET = np.zeros((group*N))
for g in range(group):
    for n in range(N):
        if map_detector[n] == 1:
            SIGMA_DET[g * N + n] = 1

#######################################################################################################
output_dir = f'../OUTPUTS/{case_name_base}'

##### Forward Simulation
solver_type = 'forward'
os.makedirs(f'{output_dir}/{case_name2}_{solver_type.upper()}', exist_ok=True)
conv = convert_index_2D_rect(D, I_max, J_max)
conv_array = np.array(conv)
matrix_builder = MatrixBuilderForward2DRect(group, N, conv, TOT, SIGS_reshaped, BC, dx, dy, D, chi, NUFIS)
M, F_FORWARD = matrix_builder.build_forward_matrices()
solver = SolverFactory.get_solver_power2DRect(solver_type, group, N, conv, M, F_FORWARD, dx, dy, precond, tol=1E-10)
keff, PHI_temp = solver.solve()
PHI, PHI_reshaped, PHI_reshaped_plot = PostProcessor.postprocess_power2DRect(PHI_temp, conv, group, N, I_max, J_max)
output = {"keff": keff.real}
for g in range(len(PHI_reshaped)):
    phi_groupname = f'PHI{g + 1}_{solver_type.upper()}'
    output[phi_groupname] = [val.real for val in PHI_reshaped[g]]
with open(f'{output_dir}/{case_name2}_{solver_type.upper()}/{case_name2}_{solver_type.upper()}_output.json', 'w') as json_file:
    json.dump(output, json_file, indent=4)

##### Adjoint Simulation
solver_type = 'adjoint'
os.makedirs(f'{output_dir}/{case_name2}_{solver_type.upper()}', exist_ok=True)
conv = convert_index_2D_rect(D, I_max, J_max)
conv_array = np.array(conv)
matrix_builder = MatrixBuilderAdjoint2DRect(group, N, conv, TOT, SIGS_reshaped, BC, dx, dy, D, chi, NUFIS)
M, F_ADJOINT = matrix_builder.build_adjoint_matrices()
solver = SolverFactory.get_solver_power2DRect(solver_type, group, N, conv, M, F_ADJOINT, dx, dy, precond, tol=1E-10)
keff, PHI_ADJ_temp = solver.solve()
PHI_ADJ, PHI_ADJ_reshaped, PHI_ADJ_reshaped_plot = PostProcessor.postprocess_power2DRect(PHI_ADJ_temp, conv, group, N, I_max, J_max)
output = {"keff": keff.real}
for g in range(len(PHI_ADJ_reshaped)):
    phi_groupname = f'PHI{g + 1}_{solver_type.upper()}'
    output[phi_groupname] = [val.real for val in PHI_ADJ_reshaped[g]]
with open(f'{output_dir}/{case_name2}_{solver_type.upper()}/{case_name2}_{solver_type.upper()}_output.json', 'w') as json_file:
    json.dump(output, json_file, indent=4)

# Number of source -> From 1 to 3
# Frequency -> logspace from 0.01 Hz to 10 Hz
# Energy -> random between group 1 and 2, might be the same group
# Location -> random
# magnitude -> linspace 1% to 10% of Total XS
# 50 iterations each

additional_iter = 1
max_num_source = 2
freq = np.logspace(-2, 1, 10)
add_iter = 0
iter = 0
validity_INVERT = []
validity_ZONE = []
validity_SCAN = []
validity_BRUTE = []
validity_BACK = []
validity_GREEDY = []
methods = ["INVERT", "ZONE", "SCAN", "BRUTE", "BACK", "GREEDY"]
conv = convert_index_2D_rect(D, I_max, J_max)
conv_array = np.array(conv)

iter = 0
iter_file = f"../OUTPUTS/{case_name_base}/iteration_info.txt"

# Check if the file exists, if yes, delete it
if os.path.exists(iter_file):
    os.remove(iter_file)
    print(f"Existing file '{iter_file}' deleted.")

conv_new = np.zeros((group*N))
for g in range(group):
    for n in range(N):
        m = g * N + n
        if conv[n] > 0:
            conv_new[m] = g * max(conv) + conv[n]

while add_iter < additional_iter:
    for num_source in range(max_num_source):
        for fo in range(len(freq)):
            dTOT = [row[:] for row in dTOT_OLD]
            source = num_source + 1
            f = freq[fo]

            # Choose location, energy, magnitude
            loc_conv = []
            loc = []
            for s in range(source):
                loc_conv.append(random.randint(1, group * max(conv)))

            for l, lo in enumerate(loc_conv):
                for g in range(group):
                    for n in range(N):
                        m = g * N + n
                        if lo == conv_new[m]:
                            loc.append(m)

            mag_real_loc = []
            mag_imag_loc = []
            for g in range(group):
                for n in range(N):
                    for l in range(len(loc)):
                        if g * N + n == loc[l]:
                            mag_real = random.randint(1, 10)/100
                            imag_random = random.randint(0,1)
                            if imag_random == 0:
                                dTOT[g][n] = mag_real * TOT[g][n]
                                mag_real_loc.append(mag_real)
                                mag_imag_loc.append(0.0)
                            elif imag_random == 1:
                                mag_imag = random.randint(1, 10)/100
                                dTOT[g][n] = mag_real * TOT[g][n] + (1j * mag_imag * TOT[g][n])
                                mag_real_loc.append(mag_real)
                                mag_imag_loc.append(mag_imag)
    
            case_name = f'{case_name2}_iter{iter}'

            # Append to file without changing loop structure
            with open(iter_file, "a") as file:
                file.write(f"Iteration: {iter+1}, num_source: {len(loc)}, loc_conv = {loc_conv}, loc = {loc}, frequency: {f}, Real magnitude = {mag_real_loc}, Imaginary magnitude = {mag_imag_loc}\n")

            # run main_unfold_2D_RECT
            dPHI_temp, S, dPHI_temp_meas, G_matrix = main_unfold_2D_rect_base(group, N, I_max, J_max, TOT, SIGS_reshaped, BC, dx, dy, D, chi, NUFIS, precond, v, Beff, omega, l, dTOT, dSIGS_reshaped, dNUFIS, map_detector, case_name, case_name_base, case_name2, x, y)
            dPHI_temp_INVERT, dS_unfold_INVERT_temp, dS_unfold_ZONE_temp, dS_unfold_SCAN_temp, validity_INVERT, validity_ZONE, validity_SCAN = main_unfold_2D_rect_old_methods(dPHI_temp_meas, dPHI_temp, S, G_matrix, group, N, I_max, J_max, conv, map_detector, map_zone, case_name, case_name_base, x, y, validity_INVERT, validity_ZONE, validity_SCAN)
            dPHI_temp_BRUTE, dS_unfold_BRUTE_temp, validity_BRUTE = main_unfold_2D_rect_brute(dPHI_temp_meas, dPHI_temp, S, G_matrix, group, N, I_max, J_max, conv, map_detector, case_name, case_name_base, x, y, validity_BRUTE)
            dPHI_temp_BACK, dS_unfold_BACK_temp, validity_BACK = main_unfold_2D_rect_back(dPHI_temp_meas, dPHI_temp, S, G_matrix, group, N, I_max, J_max, conv, case_name, case_name_base, x, y, validity_BACK)
            dPHI_temp_GREEDY, dS_unfold_GREEDY_temp, validity_GREEDY = main_unfold_2D_rect_greedy(dPHI_temp_meas, dPHI_temp, S, G_matrix, group, N, I_max, J_max, conv, case_name, case_name_base, x, y, validity_GREEDY)

            validity = [validity_INVERT, validity_ZONE, validity_SCAN, validity_BRUTE, validity_BACK, validity_GREEDY]
            with open(f"../OUTPUTS/{case_name_base}/output_validity.txt", "w") as f:
                for category, lst in zip(methods, validity):
                    f.write(f"{category} " + ", ".join(lst) + "\n")

            iter += 1
    add_iter += 1

end_time = time.time()
elapsed_time = end_time - start_time
print(f'Time elapsed: {elapsed_time:3e} seconds')
